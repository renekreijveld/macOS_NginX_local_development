#!/bin/bash

# setserver - Switch between webservers Apache and NginX
#
# Written by René Kreijveld - email@renekreijveld.nl
# This script is free software; you may redistribute it and/or modify it.
# This script comes without any warranty. Use it at your own risk.
#
# This program is free software; you may redistribute it and/or modify it.

# version
VERSION=1.0
# name of this
MYNAME=$(basename ${0})
# folder for phpdev configuration
CONFIG_DIR="${HOME}/.config/phpdev"
# path to the phpdev configuration file
CONFIG_FILE="${CONFIG_DIR}/config"

# show message function
showmessage() {
    if [ "${SILENT}" == "no" ]; then
        echo "$1"
    fi
}

# display usage information
usage() {
    echo ""
    echo "${MYNAME} version ${VERSION}, written by René Kreijveld."
    echo ""
    echo "Usage: ${MYNAME} -n | -a [-s] [-h]"
    echo ""
    echo " -n set webserver to NginX."
    echo " -a set webserver to Apache."
    echo ""
    echo " You must specify either -n or -a."
    echo ""
    echo "The other options are:"
    echo " -s silent, no messages will be shown (optional)."
    echo " -h display this help."
    echo ""
    exit 0
}

# Parse command line arguments
SILENT="no"
SERVER=""
while getopts "ansh" opt; do
    case ${opt} in
    a)
        SERVER=apache
        ;;
    n)
        SERVER=nginx
        ;;
    s)
        SILENT="yes"
        ;;
    h)
        usage
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        usage
        ;;
    :)
        echo "Option -$OPTARG requires an argument." >&2
        usage
        ;;
    esac
done

showmessage "${MYNAME} version ${VERSION}, written by René Kreijveld."

# Load configuration file defaults
if [[ -f "${CONFIG_FILE}" ]]; then
    source "${CONFIG_FILE}"
else
    echo "Error: configuration file ${CONFIG_FILE} not found, exiting."
    exit 1
fi  

# check if mandatory parameters are provided
if [ -z "${SERVER}" ]; then
    echo "Error: no -a or -n specified."
    echo "Usage: ${MYNAME} -n | -a [-s] [-h]"
    exit 1
fi

if [ "${SERVER}" == "${WEBSERVER}" ]; then
    showmessage "Webserver is already ${SERVER}, no need to switch."
    exit 0
fi

if [ "${SERVER}" == "apache" ]; then
    showmessage "Switching to Apache webserver."
    /usr/local/bin/stopnginx
    /usr/local/bin/startapache
fi

if [ "${SERVER}" == "nginx" ]; then
    showmessage "Switching to NginX webserver."
    /usr/local/bin/stopapache
    /usr/local/bin/startnginx
fi

# Update config file
sed -i '' "s|^WEBSERVER=.*|WEBSERVER=${SERVER}|" "$CONFIG_FILE"
