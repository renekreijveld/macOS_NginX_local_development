#!/bin/bash

# jdbdumpall - Create a backup of the MySQL databases and upload to Hetzner Storage Box
#
# Copyright 2018+ Rene Kreijveld - email@renekreijveld.nl
#
# This program is free software; you may redistribute it and/or modify it.
#
# Version history
# 1.0 Initial version
# 2.0 Added upload to Hetzner Storage Box option

# define variables

# version
VERSION=2.0

# start folder where we start searching
STARTDIR="/Users/$USER/Development/Sites"

# where to store backup files
STOREPATH="/Users/$USER/Development/Backup/mysql"

# display messages
SILENT="no"

# determine path of script
MYPATH=$(
    cd $(dirname ${0})
    pwd -P
)
MYNAME=$(basename ${0})

# check if folder for backup storage exists
if [ ! -d "${STOREPATH}" ]; then
    echo "Backup directory does not exist!"
    exit 1
fi

# display usage information
usage() {
    echo ""
    echo "${MYNAME} version ${VERSION}, written by Rene Kreijveld."
    echo ""
    echo "Usage: ${MYNAME} [-s] [-u] [-h]"
    echo ""
    echo "-s Silent. Do not display any messages to standard output."
    echo "-h Help. Display this info."
    echo ""
    exit 0
}

# show message function
showmessage() {
    if [ "${SILENT}" == "no" ]; then
        echo "$1"
    fi
}

# process the arguments
while getopts suh opt; do
    case "${opt}" in
    s)
        SILENT="yes"
        ;;
    h)
        usage
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        exit 1
        ;;
    :)
        echo "Option -$OPTARG requires an argument." >&2
        exit 1
        ;;
    esac
done

showmessage "${MYNAME} version ${VERSION}, written by Rene Kreijveld."

for DIR in $(find ${STARTDIR} -maxdepth 4 -type d); do
    if [ -f ${DIR}/configuration.php ]; then
        # possible joomla found
        showmessage "Possible Joomla found at ${DIR}."

        cd ${DIR}

        if [ ! -e ${MYPATH}/jfunctions ]; then
            showmessage "Cannot continue: script jfunctions not found, exiting."
            exit 1
        else
            . ${MYPATH}/jfunctions
        fi

        # create backup
        NOW=$(date +"%Y%m%d-%H%M%S")

        # dump the database to a .sql file
        if mysqldump --skip-opt --add-drop-table --add-locks --create-options --disable-keys --lock-tables --quick --set-charset --host=${host} --user=${dbuser} --password=${password} ${database} > ${STOREPATH}/${database}.${NOW}.sql; then
            showmessage "Database dump created for ${sitenameclean}"
        else
            showmessage "Error creating database dump."
            exit 1
        fi

        # gzip database dump
        showmessage "gzip ${database}.sql"
        gzip -q ${STOREPATH}/${database}.${NOW}.sql

        showmessage "Database backup for ${sitenameclean} finished."
    fi
done

showmessage "Your database backups are ready in ${STOREPATH}."